@baseUrl = http://localhost:8000
@contentType = application/json

# Auto-capture the JWT from the Login response:
@access_token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIzIiwiZXhwIjoxNzU5NzY1NzUwfQ.RuiIUwYQemkWEKDmS5ehuG31f6WQXR71hjMG1cnt7WY

# Auto-capture the saved session id from Save Session response:
@session_id = {{save_session.response.body.$.id}}

###
# 0) Health check
GET {{baseUrl}}/healthz

###
# 1) Register (run once; change username/email if re-running)
POST {{baseUrl}}/auth/register
Content-Type: {{contentType}}

{
  "name": "Jane Learner",
  "username": "jane",
  "email": "jane@example.com",
  "password": "SuperSecret123"
}

###
# 2) Login  (sets @access_token for all below)
# @name login
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "username_or_email": "Bee",
  "password": "BeeSecret123"
}

###
# 3) Me (sanity; uses Bearer token)
GET {{baseUrl}}/auth/me
Authorization: Bearer {{access_token}}

###
# 4) Generate day-by-day plan (NOT saved; stateless preview)
#    This now includes duration_days & preferred_time.
# @name gen_sched
POST {{baseUrl}}/generate-roadmap
Content-Type: {{contentType}}

###
POST {{baseUrl}}/generate-roadmap
Content-Type: {{contentType}}

###
# Communication — 10-day daily practice (workplace focus)
POST {{baseUrl}}/generate-roadmap
Content-Type: {{contentType}}

{
  "brief": "Improve communication skills for work. 15 min/day for 10 days. Each day: 1 micro-read (<=3 min), 1 short example video (<=6 min), 1 practice drill (6–8 min) with prompts and acceptance criteria. Focus on clarity, framing, feedback, and concise updates.",
  "goals": [
    "clear, concise messaging",
    "audience-first framing",
    "asking good questions",
    "giving & receiving feedback",
    "structuring updates (BLUF)",
    "asynchronous writing etiquette",
    "meeting summaries",
    "disagree & commit",
    "difficult conversations",
    "habit loop & reflection"
  ],
  "daily_minutes": 15,
  "duration_days": 10,
  "preferred_time": "19:00",
  "timezone": "Asia/Manila"
}

###
# 5) Save the generated plan (persists; ties to current user)
#    Pulls the entire JSON returned by gen_sched as the 'plan'.
# @name save_session
POST {{baseUrl}}/sessions
Authorization: Bearer {{access_token}}
Content-Type: {{contentType}}

{
  "title": "Python (5 days @ 18:00)",
  "brief": "I want to learn Python for automation",
  "goals": ["python basics", "files & scripts", "automation"],
  "daily_minutes": 30,
  "duration_days": 5,
  "preferred_time": "18:00",
  "timezone": "Asia/Manila",
  "plan": {{gen_sched.response.body.$}}
}

###
# 6) List my sessions (newest first)
#    (If you prefer, you can capture the first id from here too.)
# @name list_sessions
GET {{baseUrl}}/sessions?limit=5
Authorization: Bearer {{access_token}}

###
# 7) Get one saved session by id
#    Uses the id from Save Session response via {{session_id}}.
GET {{baseUrl}}/sessions/{{session_id}}
Authorization: Bearer {{access_token}}

###
# 8) Get a specific day (e.g., day 1) of the saved session
GET {{baseUrl}}/sessions/{{session_id}}/day/1
Authorization: Bearer {{access_token}}

###
# 9) Mark that day complete
POST {{baseUrl}}/sessions/{{session_id}}/day/1/complete
Authorization: Bearer {{access_token}}

###
# 10) Undo completion for that day
POST {{baseUrl}}/sessions/{{session_id}}/day/2/undo
Authorization: Bearer {{access_token}}

###
# 10c) View progress map for the session
#      Returns: { "day_1": { "completed": true, "completed_at": "..."} , ... }
GET {{baseUrl}}/sessions/3/progress
Authorization: Bearer {{access_token}}

###
# 11) Regenerate (stateless preview again; does NOT save)
POST {{baseUrl}}/generate-roadmap
Content-Type: {{contentType}}

{
  "brief": "I want to learn Python for automation",
  "goals": ["python basics", "files & scripts", "automation"],
  "daily_minutes": 30,
  "duration_days": 5,
  "preferred_time": "18:00",
  "timezone": "Asia/Manila"
}

###
# 12) Logout (MVP: server verifies token; client should delete it)
POST {{baseUrl}}/auth/logout
Authorization: Bearer {{access_token}}

###
# 13 Rename a session (uses @session_id captured from save)
PATCH {{baseUrl}}/sessions/{{session_id}}/title
Authorization: Bearer {{access_token}}
Content-Type: {{contentType}}

{
  "title": "Python (another rename) — evenings @ 6pm"
}

###
# 14 Verify rename
GET {{baseUrl}}/sessions/{{session_id}}
Authorization: Bearer {{access_token}}

###
# 15 Delete the session
DELETE {{baseUrl}}/sessions/{{session_id}}
Authorization: Bearer {{access_token}}

###
# 16 Confirm it's gone (should not include the deleted id)
GET {{baseUrl}}/sessions?limit=10
Authorization: Bearer {{access_token}}

###
# 17 Langsmith Test Run
GET {{baseUrl}}/debug/langsmith?test=true
Authorization: Bearer {{access_token}}

# Color Palette:
# #fffff - white
# #f1f5f8 - dirty white
# #a3c2e0 - bluish
# #77b7c5 - bluish light green
# #2d9a91 - green
# #312f32 - dark gray
# #232323 - dark dark gray